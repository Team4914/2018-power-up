// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc4914.TestBot;

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import edu.wpi.first.wpilibj.Spark;
import edu.wpi.first.wpilibj.SpeedController;
import edu.wpi.first.wpilibj.VictorSP;

// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import edu.wpi.first.wpilibj.livewindow.LiveWindow;

/**
 * The RobotMap is a mapping from the ports sensors and actuators are wired into
 * to a variable name. This provides flexibility changing wiring, makes checking
 * the wiring easier and significantly reduces the number of magic numbers
 * floating around.
 */
public class RobotMap {
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    public static SpeedController drivetrainFrontRightMotor;
    public static SpeedController drivetrainBackRightMotor;
    public static SpeedController drivetrainFrontLeftMotor;
    public static SpeedController drivetrainBackLeftMotor;
    public static SpeedController testSubsystemMech1;
    public static SpeedController testSubsystemMech2;
    public static SpeedController testSubsystemMech3;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

    public static void init() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
        drivetrainFrontRightMotor = new VictorSP(0);
        LiveWindow.addActuator("Drivetrain", "Front Right Motor", (VictorSP) drivetrainFrontRightMotor);
        drivetrainFrontRightMotor.setInverted(false);
        drivetrainBackRightMotor = new VictorSP(1);
        LiveWindow.addActuator("Drivetrain", "Back Right Motor", (VictorSP) drivetrainBackRightMotor);
        drivetrainBackRightMotor.setInverted(false);
        drivetrainFrontLeftMotor = new VictorSP(2);
        LiveWindow.addActuator("Drivetrain", "Front Left Motor", (VictorSP) drivetrainFrontLeftMotor);
        drivetrainFrontLeftMotor.setInverted(false);
        drivetrainBackLeftMotor = new VictorSP(3);
        LiveWindow.addActuator("Drivetrain", "Back Left Motor", (VictorSP) drivetrainBackLeftMotor);
        drivetrainBackLeftMotor.setInverted(false);
        testSubsystemMech1 = new Spark(4);
        LiveWindow.addActuator("TestSubsystem", "Mech1", (Spark) testSubsystemMech1);
        testSubsystemMech1.setInverted(false);
        testSubsystemMech2 = new Spark(5);
        LiveWindow.addActuator("TestSubsystem", "Mech2", (Spark) testSubsystemMech2);
        testSubsystemMech2.setInverted(false);
        testSubsystemMech3 = new Spark(6);
        LiveWindow.addActuator("TestSubsystem", "Mech3", (Spark) testSubsystemMech3);
        testSubsystemMech3.setInverted(false);

        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
    }
}
